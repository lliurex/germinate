From: Raul Rodrigo Segura <raurodse@gmail.com>
Date: Thu, 16 May 2024 11:49:48 +0200
Subject: update patch to noble version

---
 germinate/germinator.py                           |  6 ++++-
 germinate/scripts/germinate_update_metapackage.py | 28 +++++++++++++++++++++++
 2 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/germinate/germinator.py b/germinate/germinator.py
index 838c4ea..d0eb840 100644
--- a/germinate/germinator.py
+++ b/germinate/germinator.py
@@ -890,7 +890,11 @@ class Germinator:
                         continue
 
             alternatives = pkg.split("|")
-            pkg = pkg.split()[0]
+            try:
+                pkg = pkg.split()[0]
+            except Exception as e:
+                print(str(e))
+                pass
             if alternatives:
                 for alternative in alternatives[1:]:
                     alternative = alternative.split()[0]
diff --git a/germinate/scripts/germinate_update_metapackage.py b/germinate/scripts/germinate_update_metapackage.py
index 39a2c16..57e0311 100644
--- a/germinate/scripts/germinate_update_metapackage.py
+++ b/germinate/scripts/germinate_update_metapackage.py
@@ -82,6 +82,10 @@ update.cfg."""
         help="fetch seeds using bzr (requires bzr to be "
         "installed; use --vcs instead)",
     )
+    parser.add_option('-r', '--recursive', dest='recursive',
+                      action='store_true',
+                      default=False,
+                      help="expand all seeds dependencies from STRUCTURE")
     return parser.parse_args(argv[1:])
 
 
@@ -181,6 +185,14 @@ def main(argv):
             if seed_name not in mapped_seeds:
                 mapped_seeds.append(seed_name)
         packages = []
+        task_seeds_re = re.compile(r'^Task-Recursive:\s*(.*)', re.I)
+        with structure[seed_name] as seed:
+            for line in seed:
+                task_seeds_match = task_seeds_re.match(line)
+                if task_seeds_match is not None:
+                    mapped_seeds.extend(structure.inner_seeds(seed_name))
+                    mapped_seeds = list(set(mapped_seeds))
+                    break
         for mapped_seed in mapped_seeds:
             packages.extend(germinator_method(structure, mapped_seed))
         return packages
@@ -222,6 +234,7 @@ def main(argv):
                 "debootstrap",
                 "--arch",
                 arch,
+                "--no-check-gpg",
                 "--components",
                 ",".join(components),
                 "--print-debs",
@@ -317,6 +330,14 @@ def main(argv):
         except SeedError:
             sys.exit(1)
 
+        print("[%s] Loading dist blacklist..." % architecture)
+        try:
+            f = open("seeds/%s/blacklist" % seed_dist)
+            germinator.parse_blacklist(structure, f)
+            blacklist = germinator._output[structure]._blacklist
+        except Exception:
+            pass
+
         print(
             "[%s] Merging seeds with available package lists..." % architecture
         )
@@ -338,6 +359,10 @@ def main(argv):
             packages = seed_packages(
                 germinator.get_seed_entries, structure, seed_name
             )
+
+            semilla = germinator._get_seed(structure, seed_name)
+            local_blacklist = semilla._blacklist
+
             alternatives = germinator.get_seed_alternatives(
                 structure, seed_name
             )
@@ -359,6 +384,9 @@ def main(argv):
                         "%s/%s: Skipping package %s (essential)"
                         % (seed_name, architecture, package)
                     )
+                elif package in blacklist or package in local_blacklist:
+                    print("%s/%s: Skipping blacklisted package %s" %
+                          (seed_name, architecture, package))
                 else:
                     try:
                         new_list.add(
